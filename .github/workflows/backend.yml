# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time

# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Backend Java CI with Maven

on: [push, pull_request]
env:
  IMAGE_NAME: ikcap/disk_backend

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 8
        uses: actions/setup-java@v2
        with:
          java-version: "8"
          distribution: "temurin"
          cache: maven
      - name: Build with Maven
        run: mvn -B package --file pom.xml
        env:
          GITHUB_USERNAME: ${{ secrets.GITHUB_USERNAME }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - run: mkdir staging && cp server/target/*.war staging
      - uses: actions/upload-artifact@v2
        with:
          name: Package
          path: staging

  image:
    permissions:
      contents: read
      security-events: write
      packages: write
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: Package
          path: build/


      - name: Build image
        run: |
          docker build --tag $IMAGE_NAME  -f docker/backend/Dockerfile .

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Push image
        run: |
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
          [ "$VERSION" == "main" ] && VERSION=latest
          echo VERSION=$VERSION
          docker tag $IMAGE_NAME $IMAGE_NAME:$GITHUB_SHA
          docker push $IMAGE_NAME:$GITHUB_SHA
          docker tag $IMAGE_NAME $IMAGE_NAME:$VERSION
          docker push $IMAGE_NAME:$VERSION

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@2a2157eb22c08c9a1fac99263430307b8d1bc7a2
        with:
          image-ref: ikcap/disk_backend
          format: "template"
          template: "@/contrib/sarif.tpl"
          output: "trivy-results.sarif"
          severity: "CRITICAL"
          exit-code: "1"
          ignore-unfixed: "true"

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v1
        if: always()
        with:
          sarif_file: "trivy-results.sarif"



  update:
    needs: image
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Update the image
        run: |
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
          curl -u "webhook:${KEY}" https://webhook.disk.isi.edu/hooks/disk
        env:
          key: ${{ secrets.WEBHOOK }}
